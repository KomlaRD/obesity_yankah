---
title: "Prevalence and associated factors of overweight/obesity among aduts with type 2 diabetes in a tertiary health facility"
format: docx
table-of-contents: true
editor: visual
fontsize: 12pt
output-file: docx
execute: 
  echo: false
  warning: false
---

```{r import-libraries}
pacman::p_load(
  tidyverse, # Data wrangling
  gtsummary, # Table summaries
  skimr, # Skim data
  finalfit, # Label data
  rstatix, # Statistical test
  GGally, # Correlation/Scatterplot matrix
  DescTools, # C statistic
  ResourceSelection, # Hosmer-Lemeshow statistic
  generalhoslem, # Hosmer-Lemeshow
  rio, #import and export
  here, # Final management
  broom, # Tidy output
  kableExtra, # Table
  knitr, # Knit document
  lmtest, # Testing regression models
  DataExplorer # EDA report
)
```

```{r import-clean-data}
obesity <- import(here("data","obesity_clean.RData"))
```

```{r remove-columns}
# Remove redundant columns and columns with missing data > 50%
obesity <- obesity%>%
  dplyr::select(-c(
    region, # Not informative
    district, # Not informative
    town, # Not informative
    smoke_cigarette, # Low levels
    smoke_sticks,# Low levels
    # > 50% missing data:
    last_smoking,
    quit_smoking,
    last_alcohol, 
    frequent_alcohol,
    sexual_weakness,
    other_residential_status,
    other_ethnicity,
    time_vigourous_exercise,
    days_vigorous_exercise,
    fbs_today, # Redundant: info captured in average
    fbs_last_visit # Redundant: info captured in average
  ))
```

```{r categorise-muscle}
# Define categorisation function based on the table
categorise_muscle <- function(gender, age, percentage) {
  if (gender == "Female") {
    if (age >= 18 && age <= 39) {
      if (percentage < 24.3) return("Low")
      if (percentage <= 30.3) return("Normal")
      if (percentage <= 35.3) return("High")
      return("Very High")
    } else if (age >= 40 && age <= 59) {
      if (percentage < 24.1) return("Low")
      if (percentage <= 30.1) return("Normal")
      if (percentage <= 35.1) return("High")
      return("Very High")
    } else if (age >= 60 && age <= 80) {
      if (percentage < 23.9) return("Low")
      if (percentage <= 29.9) return("Normal")
      if (percentage <= 34.9) return("High")
      return("Very High")
    }
  } else if (gender == "Male") {
    if (age >= 18 && age <= 39) {
      if (percentage < 33.3) return("Low")
      if (percentage <= 39.3) return("Normal")
      if (percentage <= 44.0) return("High")
      return("Very High")
    } else if (age >= 40 && age <= 59) {
      if (percentage < 33.1) return("Low")
      if (percentage <= 39.1) return("Normal")
      if (percentage <= 43.8) return("High")
      return("Very High")
    } else if (age >= 60 && age <= 80) {
      if (percentage < 32.9) return("Low")
      if (percentage <= 38.9) return("Normal")
      if (percentage <= 43.6) return("High")
      return("Very High")
    }
  }
  return(NA) # Default case if no conditions match
}

# Apply the function to the dataset
obesity_muscle_cat <- mapply(categorise_muscle, 
                               obesity$sex, 
                               obesity$age_years, 
                               obesity$muscle_mass)

# Add obesity muscle category to full dataset
obesity$obesity_muscle_cat <- obesity_muscle_cat
```



```{r categorise-body-fat}
# Function to categorize body fat percentage
categorise_body_fat <- function(gender, age, body_fat) {
  if (gender == "Female") {
    if (age >= 18 && age <= 39) {
      if (body_fat < 21.0) return("Low")
      if (body_fat <= 32.9) return("Normal")
      if (body_fat <= 38.9) return("High")
      return("Very High")
    } else if (age >= 40 && age <= 59) {
      if (body_fat < 23.0) return("Low")
      if (body_fat <= 33.9) return("Normal")
      if (body_fat <= 39.9) return("High")
      return("Very High")
    } else if (age >= 60 && age <= 80) {
      if (body_fat < 24.0) return("Low")
      if (body_fat <= 35.9) return("Normal")
      if (body_fat <= 40.9) return("High")
      return("Very High")
    }
  } else if (gender == "Male") {
    if (age >= 18 && age <= 39) {
      if (body_fat < 8.0) return("Low")
      if (body_fat <= 19.9) return("Normal")
      if (body_fat <= 24.9) return("High")
      return("Very High")
    } else if (age >= 40 && age <= 59) {
      if (body_fat < 11.0) return("Low")
      if (body_fat <= 21.9) return("Normal")
      if (body_fat <= 27.9) return("High")
      return("Very High")
    } else if (age >= 60 && age <= 80) {
      if (body_fat < 13.0) return("Low")
      if (body_fat <= 24.9) return("Normal")
      if (body_fat <= 29.9) return("High")
      return("Very High")
    }
  }
  return(NA) # Default case if no conditions match
}


# Apply the function to categorize body fat
obesity$body_fat_cat <- mapply(categorise_body_fat, 
                                 obesity$sex, 
                                 obesity$age_years, 
                                 obesity$body_fat)

```

```{r categorise-visceral-fat}
obesity$visceral_fat_cat <- 
  case_when(
   obesity$visceral_fat <= 9 ~ "Normal",
   obesity$visceral_fat <= 14 ~ "High",
   obesity$visceral_fat <= 30 ~ "Very high"
  )
```



```{r inspect-dataset}
glimpse(obesity)
missing_glimpse(obesity)
ff_glimpse(obesity)
```

```{r dummy-variable}
obesity <- obesity%>%
  mutate(
    obese_dummy = bmi_obese%>%
      fct_recode(
        "0" = "Non-obese",
        "1" = "Obese"
      )
  )
```

```{r remove-target-features}
# Remove features related to target 
features <- 
  obesity%>% dplyr::select(-c( height_metres, 
                               bmi, 
                               # Related to target 
                               bmi_cat, 
                               bmi_outcome,
                               bmi_obese,
                               obese_dummy
))
```

## Methods

### Data inspection

```{r create-eda-report, eval=FALSE}
create_report(data = obesity, report_title = "Obesity Report")
```

```{r ggpairs, message=FALSE}
obesity%>%
  dplyr::select(age_years, sex,monthly_income, hypertension)%>%
  remove_labels() %>%
  ggpairs()
```

```{r normality-test}
# Function to perform Shapiro-Wilk test and extract p-value
shapiro_test <- function(x) {
  shapiro_result <- shapiro.test(x)
  return(shapiro_result$p.value)
}

# Extract numeric variables from the dataset
numeric_vars <- obesity %>%
  select_if(is.numeric)

# Apply the Shapiro-Wilk test to each numeric variable and tidy the results
shapiro_p_values <- numeric_vars %>%
  summarise(across(everything(), ~ shapiro_test(.))) %>%
  pivot_longer(everything(), names_to = "Variable", values_to = "P_Value")

# Display the p-values
print(shapiro_p_values)
```

```{r skim-data}
skim(obesity)
```

```{r correlation-matrix}
# Correlation matrix of numeric variables
matrix <- numeric_vars |>
  cor_mat(age_years, # Age in years
          hours_sleep, # Hours of sleep
          sbp, # Systolic blood pressure
          dbp, # Diastolic blood pressure
          duration_dm, # Duration of diabetes
          height, # Height
          weight, # Weight
          body_fat, # Body fat
          muscle_mass, # Muscle mass
          visceral_fat, # Visceral fat
          waist_circumference, # Waist circumference
          bmi, # Body mass index
          fbs_average) # Blood sugar reading
matrix
```

```{r correlation-plot}
cor_plot(matrix)
```

```{r}
ggplot(data = obesity, aes(x=sex, y=bmi)) +  
    geom_boxplot() + 
    labs( x="Sex", y="BMI")
```

```{r vif}
explanatory <- c("age_years", 
                 "sex", 
                 "marital_status", 
                 "educational_status", 
                 "monthly_income", 
                 "hours_sleep", 
                 "hypertension", 
                 "religion",
                 "drunk_alcohol" ,
                 "duration_dm",
              
                 "monthly_income",
                 "medication" ,
                  "reaction_dm",
                  "retinopathy", 
                 "cataract",
                 "neuropathy",
                  "ckd",
                 "diabetic_foot" ,
                 "height" ,
                 "weight"  ,
                 "muscle_mass",
                 "visceral_fat",
                 "waist_circumference",
                 "fbs_average"
                 )

dependent <- "obese_dummy"

obesity%>%
  glmmulti(dependent, explanatory) %>%
  car::vif()
```

### Data analysis

Descriptive statistics performed: median (IQR); frequency and proportion.

```{r demographics}
demographics <- obesity%>%
  dplyr::select(
    age_years,
    sex,
    marital_status,
    residential_status,
    religion,
    educational_status,
    ethnicity,
    occupation,
    monthly_income
  )
```

```{r anthropometry}
anthropometry <- obesity%>%
  dplyr::select(
    weight,
    height,
    bmi,
    waist_circumference,
    body_fat,
    visceral_fat,
    muscle_mass,
    bmi_cat,
    obesity_muscle_cat,
    body_fat_cat,
    visceral_fat_cat
  )
```

```{r clinical}
clinical <- obesity%>%
  dplyr::select(
    hours_sleep,
    sbp,
    dbp,
    duration_dm,
    fbs_average,
    knowledge_dm,
    medication,
    reaction_dm,
    retinopathy,
    cataract,
    neuropathy,
    hypertension,
    ckd,
    diabetic_foot
  )
```
```{r dietary}
dietary <- obesity%>%
  dplyr::select(
    drunk_alcohol,
    meals_day,
    drinks_day,
    sweets,
    sweetener,
    fried_foods,
    saturated_fat,
    refined_food,
    butter,
    eat_outside
  )
```

```{r descriptive-table}
demographics%>%
  dplyr::select(-c(bmi_obese, hypertension))%>%
        tbl_summary(
          missing = "Missing",
          sort = list(c(marital_status, ethnicity, occupation, residential_status) ~ "frequency")
        )%>%
        modify_caption("**Table 1. Characteristics of participants**")%>%
        bold_labels()
```

```{r anthro-table}
anthropometry%>%
        tbl_summary(
          missing = "Missing"
        )%>%
        modify_caption("**Table 2. Anthropometry and body composition**")%>%
        bold_labels()
```

```{r clinical-table}
clinical%>%
        tbl_summary(
          missing = "Missing"
        )%>%
        modify_caption("**Table 3. Clinical data**")%>%
        bold_labels()
```

```{r dietary-table}
dietary%>%
        tbl_summary(
          missing = "Missing"
        )%>%
        modify_caption("**Table 4. Dietary data**")%>%
        bold_labels()
```


```{r demographics-by_outcome}
demographics%>%
  dplyr::select(-c(bmi_cat, bmi_outcome))%>%
        tbl_summary(
          by = bmi_obese,
          missing = "no",
          sort = list(c(marital_status, ethnicity, occupation, residential_status) ~ "frequency")
        )%>%
        modify_caption("**Table 2. Characteristics of participants by outcome**")%>%
        bold_labels()%>%
  add_p()%>%
  bold_p()
```

### Univariate models

```{r univariate-models}
# Age model
age_model <- glm(obesity$obese_dummy ~ obesity$age_years, family = binomial)

# Sex model
sex_model <- glm(obesity$obese_dummy ~ obesity$sex, family = binomial)

# Marital status
marital_model <- glm(obesity$obese_dummy ~ obesity$marital_status, family = binomial)

# Educational status
educational_model <- glm(obesity$obese_dummy ~ obesity$educational_status, family = binomial)

# Monthly income
income_model <- glm(obesity$obese_dummy ~ obesity$monthly_income, family = binomial)

# Hours sleep
sleep_model <- glm(obesity$obese_dummy ~ obesity$hours_sleep, family = binomial)

# Hypertension
htn_model <- glm(obesity$obese_dummy ~ obesity$hypertension, family = binomial)

# Religion
religion_model <- glm(obesity$obese_dummy ~ obesity$religion, family = binomial)

# Occupation
occupation_model <- glm(obesity$obese_dummy ~ obesity$occupation, family = binomial)

# Drunk alcohol
drunk_alcohol_model <- glm(obesity$obese_dummy ~ obesity$drunk_alcohol, family = binomial)

# Body fat model
body_fat_model <- glm(obesity$obese_dummy ~ obesity$body_fat, family = binomial)

# Weight model
weight_model <- glm(obesity$obese_dummy ~ obesity$weight, family = binomial)

# Fried foods
fried_model <- glm(obesity$obese_dummy ~ obesity$fried_foods, family = binomial)

# Knowledge
knowledge_model <- glm(obesity$obese_dummy ~ obesity$knowledge_dm, family = binomial)

# Retinopathy
retinopathy_model <- glm(obesity$obese_dummy ~ obesity$retinopathy, family = binomial)

# Saturated fat
sat_model <- glm(obesity$obese_dummy ~ obesity$saturated_fat, family = binomial)

# Oral medications
oral_meds_model <- glm(obesity$obese_dummy ~ obesity$medication, family = binomial)

# Ethnicity
ethnic_model <- glm(obesity$obese_dummy ~ obesity$ethnicity, family = binomial)

# Eat outside
outside_model <- glm(obesity$obese_dummy ~ obesity$eat_outside, family = binomial)

# Sweets
sweets_model <- glm(obesity$obese_dummy ~ obesity$sweets, family = binomial)

# Reaction to dm
reaction_model <- glm(obesity$obese_dummy ~ obesity$reaction_dm, family = binomial)

# Moderate exercise
moderate_model <- glm(obesity$obese_dummy ~ obesity$moderate_exercise, family = binomial)
```

```{r model-metrics}
# List of univariate models
models <- list(age_model, 
               sex_model, 
               educational_model, 
               htn_model, 
               income_model, 
               marital_model, 
               occupation_model, 
               religion_model, 
               sleep_model,
               drunk_alcohol_model,
               body_fat_model,
               weight_model, 
               fried_model,
               knowledge_model,
               retinopathy_model,
               sat_model,
               oral_meds_model,
               ethnic_model,
               outside_model,
               sweets_model,
               reaction_model,
               moderate_model
)

# Model metrics
metrics_results <- lapply(models, glance)
metrics_results
```

### Univariate regression tables

```{r univariate-regression}
# Age model
t1 <- age_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Sex model
t2 <- sex_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Educational model
t3 <- educational_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Hypertension model
t4 <- htn_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Income model
t5 <- income_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Marital status
t6 <- marital_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Occupation model
t7 <- occupation_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Religion model
t8 <- religion_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Sleep model
t9 <- sleep_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Drunk alcohol
t10 <- drunk_alcohol_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

# Body fat
t11 <- body_fat_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t12 <- drunk_alcohol_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t13 <- body_fat_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t14 <-weight_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t15 <- fried_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t16 <- knowledge_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t17 <- retinopathy_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t18 <- sat_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t19 <-oral_meds_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t20 <-ethnic_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t21 <- outside_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t22 <- sweets_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t23 <- reaction_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

t24 <- moderate_model%>%
  tbl_regression(exponentiate = TRUE)%>%
  bold_p(t = 0.049)%>%
  bold_labels()

```

```{r stack-uni-tables}
uni_t <- tbl_stack(list(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, 
                        t12, t14, t15, t16, t17, t18, t19, t20, t21,
                        t22, t23, t24))
uni_t
```

### Multiple regression model

```{r full-model}
full_model <- glm(obesity$obese_dummy ~ obesity$age_years + obesity$sex + obesity$educational_status + obesity$marital_status+ obesity$religion + obesity$occupation + obesity$monthly_income + obesity$hypertension + obesity$drunk_alcohol + obesity$body_fat + obesity$weight + obesity$fried_foods
+ obesity$knowledge_dm + obesity$retinopathy + obesity$saturated_fat + obesity$medication + obesity$ethnicity + obesity$eat_outside + obesity$sweets
+ obesity$reaction_dm + obesity$moderate_exercise, family = binomial)
```

```{r multi-regression-table}
full_t <- full_model%>%
  tbl_regression(exponentiate = TRUE)%>%bold_p(t = 0.049)
```

```{r final-model-fit}
final_model <- full_model%>%step(direction = "forward", trace = FALSE)
```

```{r final-model-table}
final_model_t <- final_model%>%
  tbl_regression(exponentiate = TRUE)%>%bold_p(t = 0.049)
```

```{r combine-table}
tbl_merge(list(uni_t, full_t),
          tab_spanner = c("**Univariate regression**", "**Multivariable regression**"))
```

```{r dummify-data}
dummy_df <- dummify(features)
head(dummy_df)
```

```{r export_dummy_df}
export(dummy_df, here("data", "dummy_obesity.csv"))
```

### Additional cleaning strategies employed

One height entry was entered as 14. This was changed to 140 as 14 was less probable. Another entry of height of 95 was modified to 195.

Consider removing individual with bmi of 75.5

Select with p \< 0.25
